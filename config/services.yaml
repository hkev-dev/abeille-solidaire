# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the landing is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.recaptcha.site_key: "%env(GOOGLE_RECAPTCHA_SITE_KEY)%"
    app.recaptcha.secret_key: "%env(GOOGLE_RECAPTCHA_SECRET)%"
    google_recaptcha_site_key: "%env(GOOGLE_RECAPTCHA_SITE_KEY)%"
    stripe.secret_key: "%env(STRIPE_SECRET)%"
    stripe.public_key: "%env(STRIPE_PUBLIC_KEY)%"
    stripe.webhook_secret: "%env(STRIPE_WEBHOOK_SECRET)%"
    app.domain: "%env(APP_DOMAIN)%"
    coinpayments.merchant_id: "%env(COINPAYMENTS_MERCHANT_ID)%"
    coinpayments.public_key: "%env(COINPAYMENTS_PUBLIC_KEY)%"
    coinpayments.private_key: "%env(COINPAYMENTS_PRIVATE_KEY)%"
    coinpayments.ipn_secret: "%env(COINPAYMENTS_IPN_SECRET)%"
    app.secret: "%env(APP_SECRET)%"
    kyc_uploads_dir: "%kernel.project_dir%/private/uploads/kyc"
    kyc_provider: "sumsub" # or your chosen KYC provider

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"

    _instanceof:
        App\Doctrine\DBAL\Type\AbstractEnumType:
            tags: [ 'app.doctrine_enum_type' ]

    # Payment System Services
    App\Service\Payment\PaymentFactory:
        arguments:
            $container: '@service_container'
        calls:
            - [registerPaymentService, ['stripe', 'App\Service\Payment\StripePaymentService']]
            - [registerPaymentService, ['coinpayments', 'App\Service\Payment\CoinPaymentsService']]

    App\Service\Payment\StripePaymentService:
        public: true
        arguments:
            $params: "@parameter_bag"
            $logger: "@logger"

    App\Service\Payment\CoinPaymentsService:
        public: true
        arguments:
            $params: "@parameter_bag"
            $logger: "@logger"
            $router: "@router"

    # Existing Services
    gedmo.mapping.driver.attribute:
        class: Gedmo\Mapping\Driver\AttributeReader

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_listener, event: "onFlush" }
            - { name: doctrine.event_listener, event: "loadClassMetadata" }
            - { name: doctrine.event_listener, event: "prePersist" }
        calls:
            - [setAnnotationReader, ["@gedmo.mapping.driver.attribute"]]

    App\EventSubscriber\RegistrationSubscriber:
        arguments:
            $emailService: '@App\Service\EmailService'
            $receiptService: '@App\Service\DonationReceiptService'
            $logger: "@logger"
        tags: ["kernel.event_subscriber"]

    App\Service\EmailService:
        arguments:
            $mailer: "@mailer"
            $senderEmail: "%env(MAILER_FROM_ADDRESS)%"
            $senderName: "%env(MAILER_FROM_NAME)%"
            $appSecret: "%app.secret%"

    App\Service\SecurityService:
        arguments:
            $registrationLimiter: "@limiter.registration_limiter"
            $recaptchaSecretKey: "%app.recaptcha.secret_key%"

    Symfony\Component\Security\Http\Authentication\AuthenticationSuccessHandlerInterface:
        alias: security.authentication.success_handler.main.form_login

    Symfony\Component\Security\Http\Authentication\AuthenticationFailureHandlerInterface:
        alias: security.authentication.failure_handler.main.form_login

    # Authenticator configuration
    app.security.form_login_authenticator:
        class: Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator
        arguments:
            $options: { login_path: app.login, check_path: app.login }

    App\Controller\Public\AuthController:
        arguments:
            $authenticator: '@app.security.form_login_authenticator'
        autowire: true

    App\EventSubscriber\MembershipEventSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    App\Service\KycService:
        arguments:
            $kycUploadsDir: "%kyc_uploads_dir%"
            $kycProvider: "%kyc_provider%"

    stripe.client:
        class: Stripe\StripeClient
        arguments: ["%stripe.secret_key%"]

    App\Service\PaymentMethodService:
        arguments:
            $stripe: "@stripe.client"
            $entityManager: "@doctrine.orm.entity_manager"
            $logger: "@logger"
