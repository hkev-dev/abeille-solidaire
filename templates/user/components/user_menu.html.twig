{% import "user/components/menu-item.html.twig" as menuItem %}

<div {{ attributes }}>
    <div class="menu flex flex-col w-full gap-1.5 px-3.5" data-menu="true" data-menu-accordion-expand-all="false" id="sidebar_primary_menu">
        {# Dashboard #}
        {{ menuItem.render({
            label: 'Tableau de bord',
            icon: 'ki-duotone ki-element-11',
            route: 'app.user.dashboard'
        }) }}

        {# Current Flower Section #}
        {% if currentFlower %}
            {{ menuItem.render({
                label: currentFlower.name,
                icon: 'ki-duotone ki-abstract-36',
                route: 'app.user.flower.current',
                badge: {
                    text: flowerProgress.received ~ '/4',
                    class: flowerProgress.received == 4 ? 'badge-success' : 'badge-primary'
                }
            }) }}
        {% endif %}

        {# Donations Management #}
        {{ menuItem.render({
            label: 'Dons',
            icon: 'ki-duotone ki-heart',
            routes: ['app.user.donations.received', 'app.user.donations.sent'],
            submenu: [
                {
                    label: 'Dons Reçus',
                    route: 'app.user.donations.received',
                    badge: unreadDonations|length > 0 ? {
                        text: unreadDonations|length,
                        class: 'badge-success'
                    } : null
                },
                {
                    label: 'Dons Envoyés',
                    route: 'app.user.donations.sent'
                }
            ]
        }) }}

        {# Wallet with withdrawal eligibility check #}
        {{ menuItem.render({
            label: 'Portefeuille',
            icon: 'ki-duotone ki-wallet',
            routes: ['app.user.wallet.index', 'app.user.wallet.withdraw'],
            submenu: [
                {
                    label: 'Solde',
                    route: 'app.user.wallet.index',
                    badge: {
                        text: walletBalance|format_currency('EUR'),
                        class: 'badge-primary'
                    }
                },
                {
                    label: 'Retrait',
                    route: 'app.user.wallet.withdraw',
                    disabled: not withdrawalEligibility.isEligible,
                    tooltip: not withdrawalEligibility.isEligible ? 'Conditions requises non remplies' : null
                }
            ]
        }) }}

        {# Project Management - Single Project #}
        {{ menuItem.render({
            label: 'Mon Projet',
            icon: 'ki-duotone ki-rocket',
            submenu: userProject ? [
                {
                    label: 'Détails du Projet',
                },
                {
                    label: 'Mises à jour',
                    badge: userProject.updates|length > 0 ? {
                        text: userProject.updates|length,
                        class: 'badge-primary'
                    } : null
                },
                {
                    label: 'FAQs',
                }
            ] : [
                {
                    label: 'Ajouter mon Projet',
                    disabled: not withdrawalEligibility.hasKyc,
                    tooltip: not withdrawalEligibility.hasKyc ? 'Validation KYC requise' : null
                }
            ]
        }) }}

        {# Profile & Settings #}
        {{ menuItem.render({
            label: 'Paramètres',
            icon: 'ki-duotone ki-setting-2',
            routes: ['app.user.settings.profile', 'app.user.settings.kyc', 'app.user.settings.membership'],
            submenu: [
                {
                    label: 'Mon Profil'
                },
                {
                    label: 'KYC',
                    route: 'app.user.settings.kyc',
                    badge: not withdrawalEligibility.hasKyc ? {
                        text: 'À valider',
                        class: 'badge-warning'
                    } : null
                },
                {
                    label: 'Adhésion',
                    route: 'app.user.settings.membership',
                    badge: not membershipInfo.isActive ? {
                        text: membershipInfo.daysUntilExpiration <= 0 ? 'Expirée' : 'J-' ~ membershipInfo.daysUntilExpiration,
                        class: 'badge-danger'
                    } : null
                }
            ]
        }) }}
    </div>
</div>
